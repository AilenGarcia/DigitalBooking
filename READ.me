-BackEnd
Usuario común:
email:karencg@gmail.com
password:abc123
Usuario Administrador:
email:admmin@gmail.com
password:abc123
URL : http://grupo1-digitalbookingfe.s3-website.us-east-2.amazonaws.com/
URL de Swagger: http://localhost:8080/swagger-ui/index.html#/




- Infraestructura 
Servicios y paquetes instalados en la instancia de EC2:
 - Apache2 
    sudo apt update
    sudo apt install apache2
    sudo ufw allow 'Apache'

 - Java 17 
    sudo apt update
    java -version
    sudo apt install openjdk-17-jdk

 - Docker
    sudo apt-get update
    sudo apt-get install \ ca-certificates \ curl \ gnupg
    sudo mkdir -m 0755 -p /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    echo \
    "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
    "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
    sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    sudo apt-get update
    sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

    Es muy importante además de tener los paquetes y servicios instalados también es esencial tener las reglas de cortafuegos configuradas en nuestra instancia de EC2, se abrió el puerto 8080, de esta forma nuestra API de BackEnd tendrá un deploy exitoso


    

Deploy frontEnd estático en AWS S3 - http://grupo1-digitalbookingfe.s3-website.us-east-2.amazonaws.com/

En primera instancia para realizar el deploy de nuestro front-end se descargo e instalo AWS CLI - https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html, este programa nos permite sincronizar nuestra computadora con nuestro usuario de AWS. Se realizo la conexion mediante el AccessKeyId y SecretAccessKey proporcionado por nuestros profesores. Al tener sincronizado AWS CLI se ejecutan los siguientes comandos en la consola de Visual Studio Code : 
    -npm run build
    -aws s3 sync .\dist/ s3://grupo1-digitalbookingfe

Al ejecutar el primer comando se crea un build de nuestro front que posteriormente con el segundo comando se va a deployear a nuestro bucket de S3 (URL proporcionada al inicio)











